/* MEDIA QUERY MANAGER

0-600px          :       Mobile
600px - 900px    :       Tablet Portrait
900px - 1200px   :       Tab landscape
(1200-1800px) is where our normal styles apply - this is desktop-first approach
1800px+          :       Big Desktop

*/
/* Breakpoint argument choices
1. phone
2. tab-port
3. tab-land
4. big-desktop
*/
@keyframes moveInLeft {
  /*@keyframes to create animations*/
  0% {
    opacity: 0;
    transform: translate(-10rem); }
  /* 50% {
        opacity: 0.7;
        transform: translate(-50px,0);
    } */
  /*75% {
        transform: translate(-50px,-25px) ;
    }*/
  80% {
    opacity: 1;
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    opacity: 0.7;
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  /*80% {
       opacity: .8;
       transform: translateY(-1rem);
    }*/
  100% {
    opacity: 1;
    transform: translate(0); } }

/*@keyframes logoanim {
    0% {
       opacity: 0.5;
    }
    50% {
       opacity: 0.7;
       transform: rotate3d(0,0,1,180deg);
    }
    100% {
       opacity: 1;
       transform:rotate(0deg);
    }
}*/
/* because these are the basic definitons of the entire project*/
*, *::after, *::before {
  /*Universal selector selects only real elements so for pseudo elements we use ::after , ::before:   */
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*To see the power of inheritance*/ }

html {
  font-size: 50%;
  /*Putting root font-size: 10px; is bad practise instead put in percentage of default browser font size(16px)
but my browser's default font-size is 20px  i.e. (10/20)*100 = 50% */
  /* @media (max-width: 600px) {
        font-size: 50%;
    }
    Old Traditional Way 
    @include respond-phone {
        font-size: 50%;
    }*/
  /*@include respond(phone) { This is not necessary because all css rules in tab-port will apply to this also.
        font-size: 50%;
    } */
  /*@include respond(phone) {         //(width<600px)
        font-size: 30%;               // 1rem=6px so 6/20 = 30%
    }*/ }
  @media only screen and (max-width: 60em) {
    html {
      font-size: 45%; } }
  @media only screen and (max-width: 45em) {
    html {
      font-size: 40%; } }
  @media only screen and (min-width: 90em) {
    html {
      font-size: 60%; } }

body {
  box-sizing: border-box;
  /*is to change the BoxModel so that borders and paddings are no longer added to the total width or height of box*/
  /*The width and height properties (and min/max properties) includes content, padding and border*/
  padding: 3rem; }
  @media only screen and (max-width: 45em) {
    body {
      padding: 0; } }

::selection {
  background-color: #55c57a;
  color: white; }

/*Everything related to text and typography is moved here */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777; }

.primary-heading {
  color: white;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* To fix the little shake during animation */
  margin-bottom: 4rem; }
  .primary-heading--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    /*The 2 imp properties for the animation to work*/
    animation-duration: 1.5s;
    animation-timing-function: ease-in;
    /*animation-delay: 1s;
        animation-iteration-count: 2;*/ }
    @media only screen and (max-width: 30em) {
      .primary-heading--main {
        letter-spacing: 1rem;
        font-size: 5rem; } }
  .primary-heading--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation-name: moveInRight;
    animation-duration: 1.5s;
    animation-timing-function: ease-in; }
    @media only screen and (max-width: 30em) {
      .primary-heading--sub {
        letter-spacing: .5rem; } }

.heading-secondary {
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  @media only screen and (max-width: 45em) {
    .heading-secondary {
      font-size: 3rem; } }
  @media only screen and (max-width: 30em) {
    .heading-secondary {
      font-size: 2.5rem; } }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  text-transform: uppercase;
  font-size: 1.6rem;
  font-weight: 700; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }
  @media only screen and (max-width: 45em) {
    .u-margin-bottom-big {
      margin-bottom: 5rem !important; } }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }
  @media only screen and (max-width: 45em) {
    .u-margin-bottom-medium {
      margin-bottom: 3rem !important; } }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: .15;
  z-index: -1;
  overflow: hidden; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    object-fit: cover;
    /* This object-fit property set to cover fills the parent element and clips off the extra video without affecting
        aspect-ratio */ }

/* Because the button is a component i.e. independent buliding block and reuasable and can be used anywhere on the page*/
.btn {
  /*&--center {
        position: absolute;
        top: 3rem;
        left: 3.5rem;
    }*/ }
  .btn, .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    /*transform: translateX(60%);*/
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem;
    border: none;
    cursor: pointer; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.205); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active, .btn:focus {
    outline: none;
    transform: translateY(0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.199);
    /*box-shadow : X-offset Y-offset blur_radius spread_radius color */ }
  .btn--white {
    background-color: white;
    color: #777; }
    .btn--white::after {
      background-color: white; }
  .btn--green {
    background-color: #55c57a;
    color: white; }
    .btn--green::after {
      background-color: #55c57a; }
  .btn::after {
    /*to create a pseudo-element (last child of selected element) and it is inline by default*/
    content: "";
    /*content property is always necessary otherwise pseudo element doesnt appear*/
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /* z-index defines the position of elements if they are one on top of another (-1 means behind the button)*/
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-in 1s;
    animation-fill-mode: backwards;
    /*wht this does is it applies all styles to zero percent before the animation begins*/ }

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  text-decoration: none;
  display: inline-block;
  font-size: 1.6rem;
  padding: 3px;
  border-bottom: 1px solid #55c57a;
  transition: all .3s; }

.btn-text:hover {
  background-color: #55c57a;
  color: white;
  transform: translateY(-5px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn-text:active {
  transform: translateY(0);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.card {
  perspective: 150rem;
  position: relative;
  height: 52rem;
  /* when we use absolute positioning the parent element card collapses and loses its height so we mention the parent's height
    same as the child's height*/ }
  .card__side {
    /* color: $color-white;          just for testing 
        font-size: 2rem;*/
    height: 52rem;
    transition: all .8s ease;
    border-radius: 3px;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden; }
    .card__side--front {
      background-color: white; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    /* background-blend-mode this property blends the gradient and background image (blending means mixing 
            of one substance with another substance)*/
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: white;
    text-align: right;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    /* what clone does is that applies all declarations in the selector(in this case only padding) 
            to all the blocks that are created by the element*/
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    color: white;
    text-align: center;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }
  @media only screen and (max-width: 45em), only screen and (hover: none) {
    .card {
      height: auto;
      /* when we use absolute positioning the parent element card collapses and loses its height so we mention the parent's height
        same as the child's height*/
      border-radius: 3px;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
      background-color: white; }
      .card__side {
        height: auto;
        position: relative;
        box-shadow: none; }
        .card__side--back {
          transform: rotateY(0);
          clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%); }
      .card:hover .card__side--front {
        transform: rotateY(0); }
      .card__details {
        padding: 1rem 3rem; }
      .card__cta {
        position: relative;
        top: 0;
        left: 0;
        transform: translate(0);
        width: 100%;
        padding: 7rem 4rem 4rem 4rem; }
      .card__price-box {
        margin-bottom: 3rem; }
      .card__price-value {
        font-size: 4rem;
        font-weight: 300; } }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 5px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem; }
    @media only screen and (max-width: 45em) {
      .composition__photo {
        float: left;
        position: relative;
        width: 33.33333%;
        box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2); } }
    .composition__photo--p1 {
      top: -2rem;
      left: 0; }
      @media only screen and (max-width: 45em) {
        .composition__photo--p1 {
          top: 0;
          transform: scale(1.2); } }
    .composition__photo--p2 {
      top: 2rem;
      right: 0; }
      @media only screen and (max-width: 45em) {
        .composition__photo--p2 {
          top: -1rem;
          transform: scale(1.3);
          z-index: 15; } }
    .composition__photo--p3 {
      top: 10rem;
      left: 20%; }
      @media only screen and (max-width: 45em) {
        .composition__photo--p3 {
          top: 1rem;
          left: 0;
          transform: scale(1.1); } }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  @media only screen and (max-width: 45em) {
    .feature-box {
      padding: 2rem; } }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent; }
    @media only screen and (max-width: 45em) {
      .feature-box__icon {
        margin-bottom: 0; } }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.05); }

.form__group:not(:last-child) {
  margin-bottom: 2rem; }

.form__input {
  font-size: 1.5rem;
  font-family: inherit;
  color: inherit;
  padding: 1.5rem 2rem;
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.5);
  border: none;
  border-bottom: 3px solid transparent;
  width: 90%;
  display: block;
  transition: all .3s; }
  @media only screen and (max-width: 45em) {
    .form__input {
      width: 100%; } }
  .form__input:focus {
    outline: none;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
    border-bottom: 3px solid #55c57a; }
  .form__input:focus:invalid {
    border-bottom: 3px solid #ff7730; }
  .form__input::-webkit-input-placeholder {
    color: #999; }

.form__label {
  font-size: 1.2rem;
  font-weight: 700;
  margin-left: 2rem;
  margin-top: .7rem;
  transition: all .3s; }

.form__input:placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  /* if we set only opacity: 0; then the element will still be on the page but when visibilty is set hidden
        then the element is really gone. */
  transform: translateY(-4rem); }

.form__radio-group {
  width: 49%;
  display: inline-block; }
  @media only screen and (max-width: 45em) {
    .form__radio-group {
      width: 100%;
      margin-bottom: 2rem; } }

.form__radio-input {
  /* opacity: 0;
        visibility: hidden;*/
  display: none; }

.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  position: relative;
  padding-left: 4.5rem; }

.form__radio-button {
  width: 3rem;
  height: 3rem;
  border: 5px solid #55c57a;
  border-radius: 50%;
  display: inline-block;
  position: absolute;
  left: 0;
  top: -.4rem; }
  .form__radio-button::after {
    content: "";
    display: inline-block;
    width: 1.3rem;
    height: 1.3rem;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #55c57a;
    opacity: 0;
    transition: opacity .2s; }

.form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
  opacity: 1; }

.popup {
  height: 100vh;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 3000;
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  opacity: 0;
  visibility: hidden;
  transition: all .3s; }
  @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
    .popup {
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
      background-color: rgba(0, 0, 0, 0.3); } }
  .popup__content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 3px;
    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
    width: 75%;
    background-color: white;
    display: table;
    overflow: hidden;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.25);
    transition: all .4s .2s; }
    @media only screen and (max-width: 60em) {
      .popup__content {
        width: 60%;
        display: block; } }
    @media only screen and (max-width: 30em) {
      .popup__content {
        width: 100%; } }
  .popup__left {
    width: 33.333%;
    display: table-cell; }
    @media only screen and (max-width: 60em) {
      .popup__left {
        width: 100%;
        height: 25rem;
        display: block;
        margin-bottom: 3rem; } }
    @media only screen and (max-width: 45em) {
      .popup__left {
        height: 20rem; } }
  .popup__right {
    width: 66.667%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem; }
    @media only screen and (max-width: 45em) {
      .popup__right {
        width: 100%;
        display: block;
        padding: 3rem 3rem; } }
  .popup__img {
    display: block;
    width: 100%; }
    @media only screen and (max-width: 60em) {
      .popup__img {
        float: left;
        display: inline;
        width: 50%;
        height: 100%; } }
  .popup__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #eee;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; }
    @media only screen and (max-width: 45em) {
      .popup__text {
        margin-bottom: 2rem; } }
    @media only screen and (max-width: 30em) {
      .popup__text {
        column-count: auto; } }
  .popup:target {
    opacity: 1;
    visibility: visible; }
  .popup:target .popup__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__close:link, .popup__close:visited {
    display: inline-block;
    position: absolute;
    top: 2.5rem;
    right: 2.5rem;
    text-decoration: none;
    font-size: 4rem;
    color: #777;
    transition: all .2s;
    line-height: 1; }
    @media only screen and (max-width: 60em) {
      .popup__close:link, .popup__close:visited {
        top: 1rem;
        right: 1.5rem; } }
  .popup__close:hover {
    color: #55c57a; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 20px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg);
  /*& > * { Direct child selector
        transform: skewX(12deg); This cant be applied because 2 transform props cant be applied at the same time on an element(here shape).
    }*/ }
  @media only screen and (max-width: 45em) {
    .story {
      width: 100%;
      padding: 4rem;
      padding-left: 7rem; } }
  @media only screen and (max-width: 30em) {
    .story {
      transform: skewX(0); } }
  .story__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);
    position: relative;
    overflow: hidden; }
    @media only screen and (max-width: 30em) {
      .story__shape {
        transform: translateX(-3rem) skewX(0); } }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    backface-visibility: hidden;
    transition: all .5s; }
  .story__text {
    transform: skewX(12deg); }
    @media only screen and (max-width: 30em) {
      .story__text {
        transform: skewX(0); } }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: white;
    text-transform: uppercase;
    text-align: center;
    font-size: 1.7rem;
    opacity: 0;
    transition: all .5s;
    backface-visibility: hidden; }
  .story:hover .story__caption {
    transform: translate(-50%, -50%);
    opacity: 1; }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); }

.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7; }
  @media only screen and (max-width: 45em) {
    .footer {
      padding: 8rem 0; } }
  .footer__logo-box {
    text-align: center;
    margin-bottom: 8rem; }
    @media only screen and (max-width: 45em) {
      .footer__logo-box {
        margin-bottom: 6rem; } }
  .footer__logo {
    width: 15rem;
    height: auto; }
  .footer__navigation {
    border-top: 1px solid #777;
    padding-top: 2rem;
    display: inline-block;
    /*this makes sure the border-top applies only till the content is present. because inline-block doesnt occupy 
        100% width only occupies that the content needs. */ }
    @media only screen and (max-width: 45em) {
      .footer__navigation {
        width: 100%;
        text-align: center; } }
  .footer__list {
    list-style: none; }
  .footer__item {
    display: inline-block; }
    .footer__item:not(:last-child) {
      margin-right: 1.5rem; }
      @media only screen and (max-width: 45em) {
        .footer__item:not(:last-child) {
          margin-right: 1rem; } }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    transition: all .2s; }
  .footer__link:hover, .footer__link:active {
    color: #55c57a;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    background-color: black;
    transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 80%;
    float: right; }
    @media only screen and (max-width: 45em) {
      .footer__copyright {
        width: 100%;
        float: none; } }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  @media only screen and (max-width: 45em) {
    .row {
      max-width: 50rem;
      padding: 0 3rem; } }
  .row:not(:last-child) {
    /* Use of not() pseudoclass  with :last-child pseudoclass applies props to all child except last child*/
    margin-bottom: 8rem; }
    @media only screen and (max-width: 45em) {
      .row:not(:last-child) {
        margin-bottom: 6rem; } }
  .row::after {
    content: "";
    clear: both;
    display: table; }
  .row [class^="col-"] {
    /* padding-left: 2rem;
      font-size: 2rem;*/
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
      @media only screen and (max-width: 45em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media only screen and (max-width: 45em) {
      .row [class^="col-"] {
        width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2*6rem)/3); }
  .row .col-2-of-3 {
    width: calc((100% - 2*6rem)*2/3 + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3*6rem)/4); }
  .row .col-2-of-4 {
    width: calc((100% - 3*6rem)*2/4 + 6rem); }
  .row .col-3-of-4 {
    width: calc((100% - 3*6rem)*3/4 + 2*6rem); }

/*This is a layout so header is added to layout*/
.header {
  height: 85vh;
  /*95 percent of view port height*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero-small.jpg);
  /*@media (min-width: 2000px) {
        background-image: linear-gradient(to right bottom, rgba($color-primary-light,0.8) ,rgba($color-primary-dark,0.8)) 
                          , url(../img/hero.jpg);
    }*/
  background-size: cover;
  background-position: top;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*For clipping the image - important property*/
  /*.logo:hover {
        animation: moveInRight 0.5s ease-out;
    }*/ }
  @media only screen and (min-resolution: 192dpi) and (min-width: 30em), only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 30em), only screen and (min-width: 100em) {
    .header {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg); } }
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      height: 95vh; } }
  @media only screen and (max-width: 30em) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); } }
  .header__logo-box {
    /* nesting in sass  ---- here '&' means it copies this ".header" */
    position: absolute;
    left: 4rem;
    top: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.navigation__checkbox {
  /*opacity: 0;
        visibility: hidden;*/
  display: none; }

.navigation__button {
  background-color: white;
  height: 7rem;
  width: 7rem;
  border-radius: 50%;
  position: fixed;
  top: 6rem;
  right: 6rem;
  z-index: 2000;
  box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.1);
  text-align: center;
  cursor: pointer; }
  @media only screen and (max-width: 45em) {
    .navigation__button {
      top: 4rem;
      right: 4rem; } }
  @media only screen and (max-width: 30em) {
    .navigation__button {
      top: 3rem;
      right: 3rem; } }

.navigation__background {
  height: 6rem;
  width: 6rem;
  border-radius: 50%;
  position: fixed;
  top: 6.5rem;
  right: 6.5rem;
  background-image: radial-gradient(#7ed56f, #28b485);
  z-index: 1000;
  transition: transform 0.8s cubic-bezier(0.83, 0, 0.17, 1); }
  @media only screen and (max-width: 45em) {
    .navigation__background {
      top: 4.5rem;
      right: 4.5rem; } }
  @media only screen and (max-width: 30em) {
    .navigation__background {
      top: 3.5rem;
      right: 3.5rem; } }

.navigation__nav {
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1500;
  opacity: 0;
  width: 0;
  visibility: hidden;
  transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55); }

.navigation__list {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  list-style: none;
  text-align: center;
  width: 100%; }

.navigation__item {
  margin-bottom: 2rem; }

.navigation__link:link, .navigation__link:visited {
  display: inline-block;
  font-size: 3rem;
  font-weight: 300;
  padding: 1rem 2rem;
  color: white;
  text-decoration: none;
  text-transform: uppercase;
  background-image: linear-gradient(105deg, transparent 0%, transparent 50%, white 50%);
  background-size: 220%;
  transition: all .5s; }
  .navigation__link:link span, .navigation__link:visited span {
    margin-right: 1.5rem;
    display: inline-block; }

.navigation__link:hover, .navigation__link:active {
  background-position: 100%;
  color: #55c57a;
  transform: translateX(1rem); }

.navigation__checkbox:checked ~ .navigation__background {
  transform: scale(80); }

.navigation__checkbox:checked ~ .navigation__nav {
  opacity: 1;
  visibility: visible;
  width: 100%; }

.navigation__icon {
  position: relative;
  margin-top: 3.5rem; }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 3rem;
    height: 2.5px;
    background-color: #333;
    display: inline-block; }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    position: absolute;
    left: 0;
    transition: all .2s;
    overflow: hidden; }
  .navigation__icon::before {
    top: -.8rem; }
  .navigation__icon::after {
    top: .8rem; }

.navigation__button:hover .navigation__icon::before {
  top: -1rem; }

.navigation__button:hover .navigation__icon::after {
  top: 1rem; }

.navigation__checkbox:checked + .navigation__button .navigation__icon {
  background-color: transparent; }

.navigation__checkbox:checked + .navigation__button .navigation__icon::before {
  top: 0;
  transform: rotate(135deg); }

.navigation__checkbox:checked + .navigation__button .navigation__icon::after {
  top: 0;
  transform: rotate(-135deg); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
  @media only screen and (max-width: 45em) {
    .section-about {
      padding: 20rem 0; } }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -10rem; }
  .section-features > * {
    transform: skewY(7deg); }
  @media only screen and (max-width: 45em) {
    .section-features {
      padding: 10rem 0; } }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem; }
  @media only screen and (max-width: 45em) {
    .section-tours {
      padding: 20rem 0 10rem 0; } }

.section-stories {
  position: relative;
  padding: 15rem 0; }
  @media only screen and (max-width: 45em) {
    .section-stories {
      padding: 10rem 0; } }

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
  @media only screen and (max-width: 45em) {
    .section-book {
      padding: 10rem 0; } }

.book {
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: 100%;
  /* (cover) can use background-size: 100%;  gives the similar result but not the same .
    .but 100% doesnt mean the same. it makes sure the image is 100% fit in the X-direction. */
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2); }
  @media only screen and (max-width: 60em) {
    .book {
      background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg);
      background-size: cover; } }
  @media only screen and (max-width: 45em) {
    .book {
      background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(../img/nat-10.jpg); } }
  .book__form {
    width: 50%;
    padding: 6rem; }
    @media only screen and (max-width: 60em) {
      .book__form {
        width: 65%; } }
    @media only screen and (max-width: 45em) {
      .book__form {
        width: 100%; } }
